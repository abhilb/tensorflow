name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        mkdir tensorflow_lite
        cmake -B ${{github.workspace}}/tensorflow_lite -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} tensorflow/lite

    - name: Build
      # Build your program with the given configuration
      run: |
        cmake --build ${{github.workspace}}/tensorflow_lite --config ${{env.BUILD_TYPE}}
        tar -cvf ${{github.workspace}}/tensorflow_lite.tar.gz ${{github.workspace}}/tensorflow_lite        
        tar -cvf ${{github.workspace}}/tensorflow_src.tar.gz ${{github.workspace}}
        
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: tensorflow_lite
        path: ${{github.workspace}}/tensorflow_lite.tar.gz
        retention-days: 5

      
